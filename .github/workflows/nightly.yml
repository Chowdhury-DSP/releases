name: Nightly

on:
  push:
    branches:
    - main

  workflow_dispatch:

jobs:
  windows_release:
    name: Windows Nightly Release
    if: contains(toJson(github.event.commits), 'Update Nightlies')
    runs-on: windows-2022

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Install SDKs
      uses: actions/checkout@v2
      with:
        repository: Chowdhury-DSP/Plugins_SDKs
        path: SDKs
        token: ${{ secrets.OUR_GITHUB_PAT }}

    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Get latest CMake
      uses: lukka/get-cmake@latest

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Setup MSVC devcmd
      uses: ilammy/msvc-dev-cmd@v1

    - name: Choco Install PuTTy
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: install putty.portable

    - name: Choco Install Inno Setup
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: install innosetup

    - name: Install AzureSignTool
      run: dotnet tool install --global AzureSignTool

    - name: Setup Products directory
      run: mkdir products

    # - name: Setup debug session
    #   uses: mxschmitt/action-tmate@v3

    - name: Build ChowCentaur
      if: contains(toJson(github.event.commits), 'ChowCentaur')
      run: bash plugins/ChowCentaur/win_build.sh

    - name: Build ChowTape
      if: contains(toJson(github.event.commits), 'ChowTape')
      run: bash plugins/ChowTape/win_build.sh
      env:
        CCRMA_PASS: ${{ secrets.CCRMA_PASS }}
        OUR_GITHUB_PAT: ${{ secrets.OUR_GITHUB_PAT }}
        AZURE_KEY_VAULT_URI: ${{ secrets.AZURE_KEY_VAULT_URI }}
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        AZURE_CERT_NAME: ${{ secrets.AZURE_CERT_NAME }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    - name: Build ChowMatrix
      if: contains(toJson(github.event.commits), 'ChowMatrix')
      run: bash plugins/ChowMatrix/win_build.sh
      env:
        CCRMA_PASS: ${{ secrets.CCRMA_PASS }}

    - name: Build ChowPhaser
      if: contains(toJson(github.event.commits), 'ChowPhaser')
      run: bash plugins/ChowPhaser/win_build.sh

    - name: Build ChowKick
      if: contains(toJson(github.event.commits), 'ChowKick')
      run: bash plugins/ChowKick/win_build.sh

    - name: Build BYOD
      if: contains(toJson(github.event.commits), 'BYOD')
      run: bash plugins/BYOD/win_build.sh
      env:
        CCRMA_PASS: ${{ secrets.CCRMA_PASS }}
        OUR_GITHUB_PAT: ${{ secrets.OUR_GITHUB_PAT }}
        AZURE_KEY_VAULT_URI: ${{ secrets.AZURE_KEY_VAULT_URI }}
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        AZURE_CERT_NAME: ${{ secrets.AZURE_CERT_NAME }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    - name: Build ChowMultiTool
      if: contains(toJson(github.event.commits), 'ChowMultiTool')
      run: bash plugins/ChowMultiTool/win_build.sh
      env:
        CCRMA_PASS: ${{ secrets.CCRMA_PASS }}
        AZURE_KEY_VAULT_URI: ${{ secrets.AZURE_KEY_VAULT_URI }}
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        AZURE_CERT_NAME: ${{ secrets.AZURE_CERT_NAME }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    - name: Deploy Nightly Builds
      uses: garygrossgarten/github-action-scp@release
      with:
        local: products
        remote: Library/Web/chowdsp/nightly_plugins
        host: ccrma-gate.stanford.edu
        username: jatin
        password: ${{ secrets.CCRMA_PASS }}

    - name: Send email notification
      if: always()
      uses: dawidd6/action-send-mail@v2
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: chowdsp
        password: ${{ secrets.GMAIL_PASS }}
        subject: "ChowDSP ${{ github.job }} completed with status: ${{ job.status }}"
        body: "ChowDSP ${{ github.job }} has completed.\n\nRunning on commit: ${{ github.event.head_commit.message }}\nStatus: ${{ job.status }}"
        to: chowdsp@gmail.com
        from: ChowDSP Nightly Release Pipeline (Windows)

  macos_release:
    name: Mac Nightly Release
    if: contains(toJson(github.event.commits), 'Update Nightlies')
    runs-on: macos-13

    steps:
    - name: Set Xcode version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.2'

    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Install SDKs
      uses: actions/checkout@v2
      with:
        repository: Chowdhury-DSP/Plugins_SDKs
        path: SDKs
        token: ${{ secrets.OUR_GITHUB_PAT }}

    - name: Get latest CMake
      uses: lukka/get-cmake@latest

    - name: Download Packages installer build tool
      run: wget http://s.sudre.free.fr/Software/files/Packages.dmg

    - name: Mount Packages image
      run: hdiutil attach Packages.dmg

    - name: Install Packages
      run: sudo installer -pkg /Volumes/Packages\ 1.2.10/Install\ Packages.pkg -target /

    - name: Install npm packages
      run: npm install -g git+https://github.com/jatinchowdhury18/notarize-cli

    - name: Install putty
      run: brew install putty

    - name: Setup temporary keychain and add installer signing certificate
      uses: apple-actions/import-codesign-certs@v1
      with:
        keychain-password: ${{ secrets.MAC_CERTIFICATES_PASS }}
        p12-file-base64: ${{ secrets.MAC_CERTIFICATES_BASE64 }}
        p12-password: ${{ secrets.MAC_CERTIFICATES_PASS }}

    - name: Setup temporary keychain and add installer signing certificate
      uses: apple-actions/import-codesign-certs@v1
      with:
        keychain-password: ${{ secrets.MAC_CERTIFICATES_PASS }}
        p12-file-base64: ${{ secrets.MAC_INSTALLER_CERTIFICATES_BASE64 }}
        p12-password: ${{ secrets.MAC_CERTIFICATES_PASS }}
        create-keychain: 'false'

    - name: Setup Products directory
      run: mkdir products

    # - name: Setup debug session
    #   uses: mxschmitt/action-tmate@v3

    - name: Build ChowCentaur
      if: contains(toJson(github.event.commits), 'ChowCentaur')
      run: bash plugins/ChowCentaur/mac_build.sh
      env:
        TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        INSTALLER_PASS: ${{ secrets.MAC_INSTALLER_PASS }}

    - name: Build ChowTape
      if: contains(toJson(github.event.commits), 'ChowTape')
      run: bash plugins/ChowTape/mac_build.sh
      env:
        TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        INSTALLER_PASS: ${{ secrets.MAC_INSTALLER_PASS }}
        CCRMA_PASS: ${{ secrets.CCRMA_PASS }}

    - name: Build ChowMatrix
      if: contains(toJson(github.event.commits), 'ChowMatrix')
      run: bash plugins/ChowMatrix/mac_build.sh
      env:
        TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        INSTALLER_PASS: ${{ secrets.MAC_INSTALLER_PASS }}
        CCRMA_PASS: ${{ secrets.CCRMA_PASS }}

    - name: Build ChowPhaser
      if: contains(toJson(github.event.commits), 'ChowPhaser')
      run: bash plugins/ChowPhaser/mac_build.sh
      env:
        TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        INSTALLER_PASS: ${{ secrets.MAC_INSTALLER_PASS }}

    - name: Build ChowKick
      if: contains(toJson(github.event.commits), 'ChowKick')
      run: bash plugins/ChowKick/mac_build.sh
      env:
        TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        INSTALLER_PASS: ${{ secrets.MAC_INSTALLER_PASS }}

    - name: Build BYOD
      if: contains(toJson(github.event.commits), 'BYOD')
      run: bash plugins/BYOD/mac_build.sh
      env:
        TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        INSTALLER_PASS: ${{ secrets.MAC_INSTALLER_PASS }}
        CCRMA_PASS: ${{ secrets.CCRMA_PASS }}
        OUR_GITHUB_PAT: ${{ secrets.OUR_GITHUB_PAT }}

    - name: Build ChowMultiTool
      if: contains(toJson(github.event.commits), 'ChowMultiTool')
      run: bash plugins/ChowMultiTool/mac_build.sh
      env:
        TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        INSTALLER_PASS: ${{ secrets.MAC_INSTALLER_PASS }}
        CCRMA_PASS: ${{ secrets.CCRMA_PASS }}

    - name: Deploy Nightly Builds
      uses: garygrossgarten/github-action-scp@release
      with:
        local: products
        remote: Library/Web/chowdsp/nightly_plugins
        host: ccrma-gate.stanford.edu
        username: jatin
        password: ${{ secrets.CCRMA_PASS }}

    - name: Send email notification
      if: always()
      uses: dawidd6/action-send-mail@v2
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: chowdsp
        password: ${{ secrets.GMAIL_PASS }}
        subject: "ChowDSP ${{ github.job }} completed with status: ${{ job.status }}"
        body: "ChowDSP ${{ github.job }} has completed.\n\nRunning on commit: ${{ github.event.head_commit.message }}\nStatus: ${{ job.status }}"
        to: chowdsp@gmail.com
        from: ChowDSP Nightly Release Pipeline (MacOS)

  linux_release:
    name: Linux Nightly Release
    if: contains(toJson(github.event.commits), 'Update Nightlies')
    runs-on: ubuntu-20.04

    steps:
    - name: System Info
      run: more /etc/os-release

    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Install SDKs
      uses: actions/checkout@v2
      with:
        repository: Chowdhury-DSP/Plugins_SDKs
        path: SDKs
        token: ${{ secrets.OUR_GITHUB_PAT }}

    - name: Get latest CMake
      uses: lukka/get-cmake@latest

    - name: Install Linux Deps
      if: runner.os == 'Linux'
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
        sudo apt-add-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main"
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt update
        sudo apt install clang-12 -y
        sudo apt install -y g++-11
        g++-11 --version
        sudo apt-get update
        sudo apt install libasound2-dev libcurl4-openssl-dev libx11-dev libxinerama-dev libxext-dev libfreetype6-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev libjack-jackd2-dev lv2-dev

    - name: Setup Products directory
      run: mkdir products

    - name: Build ChowCentaur
      if: contains(toJson(github.event.commits), 'ChowCentaur')
      run: bash plugins/ChowCentaur/linux_build.sh

    - name: Build ChowTape
      if: contains(toJson(github.event.commits), 'ChowTape')
      run: bash plugins/ChowTape/linux_build.sh

    - name: Build ChowMatrix
      if: contains(toJson(github.event.commits), 'ChowMatrix')
      run: bash plugins/ChowMatrix/linux_build.sh

    - name: Build ChowPhaser
      if: contains(toJson(github.event.commits), 'ChowPhaser')
      run: bash plugins/ChowPhaser/linux_build.sh

    - name: Build ChowKick
      if: contains(toJson(github.event.commits), 'ChowKick')
      run: bash plugins/ChowKick/linux_build.sh

    # - name: Setup debug session
    # uses: mxschmitt/action-tmate@v3

    - name: Build BYOD
      if: contains(toJson(github.event.commits), 'BYOD')
      run: bash plugins/BYOD/linux_build.sh
      env:
        OUR_GITHUB_PAT: ${{ secrets.OUR_GITHUB_PAT }}

    - name: Build ChowMultiTool
      if: contains(toJson(github.event.commits), 'ChowMultiTool')
      run: bash plugins/ChowMultiTool/linux_build.sh

    # - name: Deploy Nightly Builds
    #   uses: garygrossgarten/github-action-scp@release
    #   with:
    #     local: products
    #     remote: Library/Web/chowdsp/nightly_plugins
    #     host: ccrma-gate.stanford.edu
    #     username: jatin
    #     password: ${{ secrets.CCRMA_PASS }}
    - name: Deploy Nightly Builds
      run: echo y | pscp -pw "${{ secrets.CCRMA_PASS }}" products/* "jatin@ccrma-gate.stanford.edu:/user/j/jatin/Library/Web/chowdsp/nightly_plugins"
  

    - name: Send email notification
      if: always()
      uses: dawidd6/action-send-mail@v2
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: chowdsp
        password: ${{ secrets.GMAIL_PASS }}
        subject: "ChowDSP ${{ github.job }} completed with status: ${{ job.status }}"
        body: "ChowDSP ${{ github.job }} has completed.\n\nRunning on commit: ${{ github.event.head_commit.message }}\nStatus: ${{ job.status }}"
        to: chowdsp@gmail.com
        from: ChowDSP Nightly Release Pipeline (Linux)
